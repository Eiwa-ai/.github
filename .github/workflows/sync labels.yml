name: Sync Labels

on:
  push:
    paths:
      - '.github/labels.yml'
  workflow_dispatch:

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub PyYAML

      - name: Sync labels
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_PAT }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
        run: |
          python - <<EOF
          import os
          import sys
          import yaml
          from github import Github, GithubException

          def get_label_config():
              labels_file = os.path.join(os.environ['GITHUB_WORKSPACE'], '.github', 'labels.yml')
              if not os.path.exists(labels_file):
                  print(f"Error: {labels_file} does not exist.")
                  sys.exit(1)
              with open(labels_file, 'r') as file:
                  return yaml.safe_load(file)

          def sync_labels(repo, label_config):
              existing_labels = {label.name: label for label in repo.get_labels()}
              
              for label in label_config:
                  name = label['name']
                  if name in existing_labels:
                      existing_label = existing_labels[name]
                      if (existing_label.color != label['color'].lstrip('#') or
                          existing_label.description != label['description']):
                          existing_label.edit(name, label['color'].lstrip('#'), label['description'])
                      del existing_labels[name]
                  else:
                      repo.create_label(name, label['color'].lstrip('#'), label['description'])
              
              for label in existing_labels.values():
                  label.delete()

          # Check if required environment variables are set
          if not os.environ.get('GITHUB_TOKEN'):
              print("Error: GITHUB_TOKEN is not set. Please make sure to set the ORG_PAT secret.")
              sys.exit(1)

          if not os.environ.get('ORG_NAME'):
              print("Error: ORG_NAME is not set. Please make sure to set the ORG_NAME secret.")
              sys.exit(1)

          try:
              g = Github(os.environ['GITHUB_TOKEN'])
              org = g.get_organization(os.environ['ORG_NAME'])
              label_config = get_label_config()

              for repo in org.get_repos():
                  print(f"Syncing labels for {repo.name}")
                  sync_labels(repo, label_config)

              print("Label sync completed for all repositories.")
          except GithubException as e:
              print(f"Error: {e}")
              sys.exit(1)
          except Exception as e:
              print(f"Unexpected error: {e}")
              sys.exit(1)
          EOF

      - name: Check for errors
        if: failure()
        run: |
          echo "The label sync action failed. Please check the logs for more information."
          exit 1
