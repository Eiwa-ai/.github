name: Synchronize Labels

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub PyYAML requests

      - name: Synchronize Labels
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_PAT }}
        run: |
          import os
          import requests
          import yaml
          from github import Github

          def get_label_definitions():
              url = "https://raw.githubusercontent.com/Eiwa-ai/.github/main/labels.yml"
              response = requests.get(url)
              response.raise_for_status()
              return yaml.safe_load(response.text)

          def sync_labels(repo, label_definitions):
              existing_labels = {label.name.lower(): label for label in repo.get_labels()}
              
              for label_def in label_definitions:
                  name = label_def['name'].lower()
                  if name in existing_labels:
                      label = existing_labels[name]
                      if label.color != label_def['color'] or label.description != label_def.get('description', ''):
                          label.edit(name=label_def['name'], color=label_def['color'], description=label_def.get('description', ''))
                      del existing_labels[name]
                  else:
                      repo.create_label(name=label_def['name'], color=label_def['color'], description=label_def.get('description', ''))
              
              for label in existing_labels.values():
                  label.delete()

          g = Github(os.environ['GITHUB_TOKEN'])
          org = g.get_organization("Eiwa-ai")
          label_definitions = get_label_definitions()

          for repo in org.get_repos():
              print(f"Synchronizing labels for {repo.name}")
              sync_labels(repo, label_definitions)

        shell: python
