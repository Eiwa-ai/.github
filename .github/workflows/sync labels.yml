- name: Synchronize Labels
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_PAT }}
        run: |
          import os
          import requests
          import yaml
          from github import Github

          def get_label_definitions():
              url = "https://raw.githubusercontent.com/Eiwa-ai/.github/main/labels.yml"
              response = requests.get(url)
              response.raise_for_status()
              return yaml.safe_load(response.text)

          def format_color(color):
              # Remove '#' if present and ensure 6 characters
              return color.lstrip('#').zfill(6)

          def sync_labels(repo, label_definitions):
              existing_labels = {label.name.lower(): label for label in repo.get_labels()}
              
              for label_def in label_definitions:
                  name = label_def['name'].lower()
                  color = format_color(label_def['color'])
                  if name in existing_labels:
                      label = existing_labels[name]
                      if label.color != color or label.description != label_def.get('description', ''):
                          label.edit(name=label_def['name'], color=color, description=label_def.get('description', ''))
                      del existing_labels[name]
                  else:
                      repo.create_label(name=label_def['name'], color=color, description=label_def.get('description', ''))
              
              for label in existing_labels.values():
                  label.delete()

          g = Github(os.environ['GITHUB_TOKEN'])
          org = g.get_organization("Eiwa-ai")
          label_definitions = get_label_definitions()

          for repo in org.get_repos():
              print(f"Synchronizing labels for {repo.name}")
              sync_labels(repo, label_definitions)

        shell: python
